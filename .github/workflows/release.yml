name: Release Build

on:
  push:
    tags:
      - 'v*' # Run when tag is pushed matching v*, like v1.0.0
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (without v prefix)'
        required: true
        default: '1.0.0'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: [3.8]
        include:
          - os: windows-latest
            asset_name: mouse-juggler-win.exe
            pyinstaller_args: --windowed --icon=docs/images/icon.ico
          - os: macos-latest
            asset_name: mouse-juggler-macos
            pyinstaller_args: --windowed
          - os: ubuntu-latest
            asset_name: mouse-juggler-linux
            pyinstaller_args: ''

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Set Version from Tag or Input
      id: set_version
      run: |
        if [[ "${{ github.event_name }}" == "push" ]]; then
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        else
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Build with PyInstaller
      run: |
        pyinstaller --clean --onefile ${{ matrix.pyinstaller_args }} --name ${{ matrix.asset_name }} main.py

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: dist/${{ matrix.asset_name }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set Version from Tag or Input
      id: set_version
      run: |
        if [[ "${{ github.event_name }}" == "push" ]]; then
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        else
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Download All Artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Display Structure of Downloaded Artifacts
      run: ls -R artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Mouse Juggler v${{ env.VERSION }}
        draft: false
        prerelease: false
        body: |
          # Mouse Juggler Release v${{ env.VERSION }}
          
          Automated release of Mouse Juggler v${{ env.VERSION }}.
          
          ## Downloads
          - Windows: mouse-juggler-win.exe
          - macOS: mouse-juggler-macos
          - Linux: mouse-juggler-linux
          
          ## Installation
          Download the appropriate executable for your operating system.
          No installation needed - just download and run!

    - name: Upload Windows Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/mouse-juggler-win.exe/mouse-juggler-win.exe
        asset_name: mouse-juggler-win-${{ env.VERSION }}.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/mouse-juggler-macos/mouse-juggler-macos
        asset_name: mouse-juggler-macos-${{ env.VERSION }}
        asset_content_type: application/octet-stream

    - name: Upload Linux Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/mouse-juggler-linux/mouse-juggler-linux
        asset_name: mouse-juggler-linux-${{ env.VERSION }}
        asset_content_type: application/octet-stream